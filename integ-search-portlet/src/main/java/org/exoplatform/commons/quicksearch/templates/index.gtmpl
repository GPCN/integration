    <style>
      .SearchBox {
          background: url("/eXoResources/skin/DefaultSkin/skinIcons/16x16/icons/SearchIcon.png") no-repeat scroll 4px center white;
          border: solid 1px lightgray;
          border-radius: 12px;
          height: 18px;
          padding-left: 20px;
          width: 120px;
      }

      .Clickable {
        cursor: pointer;
      }

      .Ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        -o-text-overflow: ellipsis;
        -ms-text-overflow: ellipsis;
      }

      .QuickSearchResult {
        margin-left: 0px;
        padding-top: 0px;
        height: 30px;
      }

      .QuickSearchResult .Avatar {
        float: left;
        padding-top: 0px;
      }

      .QuickSearchResult .Avatar img {
        padding-top: 3px;
        width: 20px;
        height: 24px;
      }

      .QuickSearchResult .Content {
        padding-left: 5px;
        overflow: hidden;
      }

      .QuickSearchResult .Content .Excerpt div {
        font-size: xx-small; color: grey;
      }

      #quickSearchResult {
        position: absolute;
        background: white;
        width: 315px;
        margin-top: 6px;
        margin-left: 3px;
        display:none;
      }

      #quickSearchResult table, #quickSearchResult th, #quickSearchResult td {
        border: 1px solid lightgray;
      }

      #quickSearchPortlet input:focus, #quickSearchPortlet textarea:focus {
          outline: none;
      }
    </style>


    <div id="quickSearchPortlet">
      <div id="quickSearch">
        <div style="padding-top: 5px;" id="quickSearchForm">
          <input type="text" id="txtQuickSearchQuery" class="SearchBox">
        </div>
        <div id="quickSearchResult" style="z-index: 1001;">
        </div>
      </div>
    </div>

    <script>
      //*** Global variables ***
      var PATH_TO_SEARCH_PAGE = "/portal/intranet/search";
      var CONNECTORS;
      var SEARCH_TYPES;
      var QUICKSEARCH_SETTING;
      var QUICKSEARCH_LIMIT;

      var QUICKSEARCH_RESULT_TEMPLATE= " \
        <div class='QuickSearchResult'> \
          <div class='Avatar Clickable'> \
            <img title='%{title}' src='%{avatar}' alt='[+]'> \
          </div> \
          <div class='Content'> \
            <div class='Title Ellipsis'><a href='%{url}'>%{title}</a></div> \
            <div class='Excerpt Ellipsis'>%{excerpt}</div> \
          </div> \
        </div> \
      ";

      var QUICKSEARCH_TABLE_TEMPLATE=" \
            <table style='table-layout: fixed;'> \
              <col width='30%'> \
              <col width='70%'> \
              %{resultRows} \
              <tr> \
                <th colspan='2' style='padding: 10px; font-weight: normal;'> \
                  <a id='seeAll' class='Clickable' href='#'>%{message}</a> \
                </th> \
              </tr> \
            </table> \
          ";

      var QUICKSEARCH_TABLE_ROW_TEMPLATE=" \
            <tr> \
              <th> \
                <div style='margin-top: 8px; color: gray;'>%{type}</div> \
              </th> \
              <td style='padding: 2px;'> \
                <div style='margin-left: 3px;'>%{results}</div> \
              </td> \
            </tr> \
          ";


      //*** Utility functions ***

      String.prototype.toProperCase = function() {
        return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
      };


      String.prototype.highlight = function(words) {
        var str = this;
        for(var i=0; i<words.length; i++) {
          if(""==words[i]) continue;
          var regex = new RegExp("(" + words[i] + ")", "gi");
          str = str.replace(regex, "<strong>$1</strong>");
        }
        return str;
      };


      function getRegistry(callback) {
        $.getJSON("/rest/search/registry", function(registry){
          if(callback) callback(registry);
        });
      }


      function getQuicksearchSetting(callback) {
        $.getJSON("/rest/search/setting/quicksearch", function(setting){
          if(callback) callback(setting);
        });
      }


      function quickSearch() {
        var query = $("#txtQuickSearchQuery").val();
        var sites = QUICKSEARCH_SETTING.searchCurrentSiteOnly ? parent.eXo.env.portal.portalName : "all";
        var types = QUICKSEARCH_SETTING.searchTypes.join(",");
        var restUrl = "/rest/search?q=" + query+"&sites="+sites+"&types="+types+"&offset=0"+"&limit="+QUICKSEARCH_LIMIT+"&sort="+"&order=desc";

        $.getJSON(restUrl, function(resultMap){
          var rows = [];
          $.each(SEARCH_TYPES, function(i, searchType){
            results = resultMap[searchType];
            if(results && 0!=$(results).size()) {
              var cell = [];
              $.each(results, function(i, result){
                cell.push(renderQuickSearchResult(result));
              });
              var row = QUICKSEARCH_TABLE_ROW_TEMPLATE.replace(/%{type}/g, CONNECTORS[searchType].displayName).replace(/%{results}/g, cell.join(""));
              rows.push(row);
            }
          });
          var message = rows.length==0 ? "No result for <strong>" + query + "<strong>" : "See All Search Results";
          $("#quickSearchResult").html(QUICKSEARCH_TABLE_TEMPLATE.replace(/%{resultRows}/, rows.join("")).replace(/%{message}/g, message));
          var width = Math.min($("#quickSearchResult").width(), $(window).width() - $("#txtQuickSearchQuery").offset().left - 20);
          $("#quickSearchResult").width(width);
          $("#quickSearchResult").show();
          $("#seeAll").attr("href", PATH_TO_SEARCH_PAGE+"?q="+query+"&types="+types+"&currentSite="+parent.eXo.env.portal.portalName);
        });
      }


      function renderQuickSearchResult(result) {
        var template = QUICKSEARCH_RESULT_TEMPLATE;
        var query = $("#txtQuickSearchQuery").val();
        var terms = query.split(/\\s+/g);

        var html = template.replace(/%{url}/g, result.url).replace(/%{title}/g, result.title.highlight(terms)).replace(/%{avatar}/g, result.imageUrl);
        //if(!isQuickSearch) html = html.replace(/%{excerpt}/g, result.excerpt).replace(/%{detail}/g, result.detail);
        html = html.replace(/%{excerpt}/g, result.excerpt.highlight(terms)).replace(/%{detail}/g, result.detail.highlight(terms));
        return html;
      }


      //*** Event handlers - Quick search ***

      $("#seeAll").live("click", function(){
        window.location.href = $(this).attr("href");
        $("#quickSearchResult").hide();
      });


      $("#txtQuickSearchQuery").keyup(function(e){
        if(""==$(this).val()) {
          $("#quickSearchResult").hide();
          return;
        }

        if(13==e.keyCode) {
          $("#seeAll").click();
        } else {
          quickSearch();
        }
      });


      $("#txtQuickSearchQuery").focus(function(){
        if(""!=$("#txtQuickSearchQuery").val()) {
          quickSearch();
        }
      });


      $("#txtQuickSearchQuery").blur(function(){
        setTimeout(function(){$("#quickSearchResult").hide();}, 200);
      });


      //*** The entry point ***
      (function(){
        getRegistry(function(registry){
          CONNECTORS = registry[0];
          SEARCH_TYPES = registry[1];

          getQuicksearchSetting(function(setting){
            QUICKSEARCH_SETTING = setting;
            QUICKSEARCH_LIMIT = setting.resultsPerPage;
          });

        });
      })();

    </script>