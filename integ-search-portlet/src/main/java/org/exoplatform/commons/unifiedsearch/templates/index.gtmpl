
<div id="searchPortlet">

  <div id="searchPage">
    <div id="sqlExec" style="margin-bottom: 20px; border: 1px dashed gray; padding-top: 5px; padding-left: 5px; display: none;">
      <div style="font-size: small;">SQL:</div>
      <div style="margin: 10px;">
        <textarea rows="4" cols="50" id="txtSql">SELECT rep:excerpt(), jcr:primaryType FROM nt:base WHERE CONTAINS(*, '%query%') ORDER BY jcr:score() DESC</textarea>
      </div>
    </div>

    <div id="searchForm" style="padding-top: 10px; text-align: center;">
      <input type="text" id="txtQuery" class="SearchBox" style="width: 250px;">
      <input type="button" id="btnSearch" value="Search">
      <hr style="color: lightgray; margin: 10px 0px 0px;">
    </div>

    <div id="facetsFilter">
      <div id="facetsFilterTitle">Filter By</div>
      <div style="padding-right: 5px;">
        <div id="siteFilter">
          <input type="checkbox" name="site" value="all">All Sites
          <ul id="lstSites"></ul>
        </div>

        <input type="checkbox" name="contentType" value="all">All Content Types
        <ul id="lstContentTypes"></ul>
      </div>
    </div>

    <div id="resultPage" style="margin-left: 10px; margin-right: 20px; margin-top: 10px;">
      <div id="resultTypes" style="display: none; margin-bottom: 15px; padding-top: 4px;"></div>
      <div style="margin-bottom: 10px;">
        <span id="resultHeader"></span>
        <span id="resultSort" style="float: right; display: none;">
          Sort By: <select id="lstSortBy"></select><span id="sortType" class="Desc Clickable">&nbsp;</span>
        </span>
      </div>
      <div id="result"></div>
      <div id="showMore" style="display: none; text-align: center; margin-bottom: 20px; margin-top: 40px;"><input type="button" id="btnShowMore" value="Show More Results"/></div>
    </div>

  </div>

</div>

<script>
  var mainSearch = {};
  var IS_CATEGORIZED = false;

  //*** Utility functions ***
  String.prototype.toProperCase = function() {
    return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
  };

  String.prototype.highlight = function(words) {
    var str = this;
    for(var i=0; i<words.length; i++) {
      if(""==words[i]) continue;
      var regex = new RegExp("(" + words[i] + ")", "gi");
      str = str.replace(regex, "<strong>$1</strong>");
    }
    return str;
  };


  $(".ResultType").live("click", function(){
    $(".Selected").toggleClass("Selected");
    $(this).toggleClass("Selected");

    var offset = parseInt($(this).attr("offset"));
    var numEntries = parseInt($(this).attr("numEntries"));

    var resultHeader = (0==numEntries) ? "No more result" : "Results 1 to " + (offset+numEntries);
    resultHeader = resultHeader + " for <strong>" + (Search.isSqlMode()?$("#txtSql").val().replace(/%query%/g, $("#txtQuery").val()):$("#txtQuery").val()) + "<strong>";
    $("#resultHeader").html(resultHeader);
    if(numEntries==mainSearch.limit) $("#showMore").show(); else $("#showMore").hide();

    var type=$(this).attr("type");
    //type = type.replace(/(:|\\.)/g,'\\\\$1').replace(/\\s/g, "_"); //for jcr nodetype
    type = type.replace(/(:|\\.)/g,'\\\\$1'); //for jcr nodetype
    $(".SearchResultType").hide(); //hide all other types
    $("#"+type+"-type").show();

    var $viewingType = $(".ResultType.Selected");
    $("#lstSortBy").val($viewingType.attr("sortBy")||"relevancy").attr("selected",true);
    $("#sortType").removeClass("Asc Desc").addClass($viewingType.attr("sortType")||"Desc");
  });


  $(".SearchResult .Avatar img").live("click", function(){
    var url = $(this).parents("div.SearchResult").find(".Content > .Title > a").attr("href");

    //get jcr node properties
    if(0 == url.indexOf("/rest/jcr/")) {
      $.getJSON("/rest/search/jcr/props?node=" + url.replace("/rest/jcr/", ""), function(props){
        var sProps = "";
        $.each(props, function(key, value){
          sProps = sProps + key + " = " + value + "\\n";
        });
        console.log(props);
        alert(sProps);
      });
    }
  });


  $(":checkbox[name='contentType']").live("click", function(){
    if("all"==this.value){ //All Content Types checked
      if($(this).is(":checked")) { // check/uncheck all
        $(":checkbox[name='contentType']").attr('checked', true);
      } else {
        $(":checkbox[name='contentType']").attr('checked', false);
      }
    } else {
      $(":checkbox[name='contentType'][value='all']").attr('checked', false); //uncheck All Content Types
    }

    if(!Search.isSqlMode()) {
      mainSearch.VIEWING_TYPE = $(".ResultType.Selected").attr("type"); //save the current view before performing search
      var checkedType = $(this).is(":checked") ? this.value : undefined;
      Search.search(function(){
        if(checkedType && $(".ResultType[type='" + checkedType + "']").get(0)) mainSearch.VIEWING_TYPE = checkedType;
      });
    }
  });


  $(":checkbox[name='site']").live("click", function(){
    if("all"==this.value){ //All Sites checked
      if($(this).is(":checked")) { // check/uncheck all
        $(":checkbox[name='site']").attr('checked', true);
      } else {
        $(":checkbox[name='site']").attr('checked', false);
      }
    } else {
      $(":checkbox[name='site'][value='all']").attr('checked', false); //uncheck All Sites
    }

    if(!Search.isSqlMode()) {
      mainSearch.VIEWING_TYPE = $(".ResultType.Selected").attr("type"); //save the current view before performing search
      Search.search();
    }
  });


  $("#btnSearch").click(function(){
    Search.search();
  });


  $("#txtQuery").focus(function(){
    mainSearch.VIEWING_TYPE = $(".ResultType.Selected").attr("type"); //save the current view before performing search
  });


  $("#txtQuery").keyup(function(e){
    var keyCode = e.keyCode || e.which,
        arrow = {up: 38, down: 40 };

    switch (keyCode) {
      case arrow.up:
        $("#sqlExec").hide();
        break;
      case arrow.down:
        $("#sqlExec").show();
        break;
      case 13:
        Search.search();
    }
  });


  if(IS_CATEGORIZED) {
    Search.search = function(callback) {
      mainSearch.categorizedSearch(callback);
    };

    $("#btnShowMore").click(function(){
      mainSearch.showMore(mainSearch.limit);
    });

    $("#lstSortBy").change(function(){
      $(".ResultType.Selected").attr("sortBy", $(this).val());
      mainSearch.showMore(0);
    });

    $("#sortType").live("click", function(){
      $(this).toggleClass("Asc Desc");
      $(".ResultType.Selected").attr("sortType", $(this).hasClass("Asc") ? "Asc" : "Desc");
      mainSearch.showMore(0);
    });

  } else {
    Search.search = function(callback) {
      mainSearch.uncategorizedSearch(callback);
    };

    $("#btnShowMore").click(function(){
      mainSearch.CACHE_OFFSET = mainSearch.CACHE_OFFSET + mainSearch.limit;
      var remaining = mainSearch.RESULT_CACHE.slice(mainSearch.CACHE_OFFSET, mainSearch.CACHE_OFFSET+mainSearch.limit);

      if(remaining.length < mainSearch.limit) {
        mainSearch.SERVER_OFFSET = mainSearch.SERVER_OFFSET + mainSearch.limit;
        mainSearch.getFromServer(function(){
          mainSearch.RESULT_CACHE = remaining.concat(mainSearch.RESULT_CACHE);
          mainSearch.renderCachedResults(true);
          $("#searchPage").animate({ scrollTop: $("#resultPage")[0].scrollHeight}, "slow");
        });
        return;
      }
      mainSearch.renderCachedResults(true);
      $("#searchPage").animate({ scrollTop: $("#resultPage")[0].scrollHeight}, "slow");
    });

    $("#lstSortBy").change(function(){
      mainSearch.SERVER_OFFSET = 0;
      mainSearch.NUM_RESULTS_RENDERED = 0;
      mainSearch.getFromServer(function(){
        mainSearch.renderCachedResults();
      });
    });

    $("#sortType").live("click", function(){
      $(this).toggleClass("Asc Desc");
      mainSearch.SERVER_OFFSET = 0;
      mainSearch.NUM_RESULTS_RENDERED = 0;
      mainSearch.getFromServer(function(){
        mainSearch.renderCachedResults();
      });
    });

  }


  //*** The entry point ***
  (function(){
    $.getJSON("/rest/search/registry", function(registry){
      $.getJSON("/rest/search/setting", function(setting){
        mainSearch = new Search(registry, setting);
      });
    });

    var sortBy = [];
    var sortFields = ["relevancy", "date", "title"];
    $.each(sortFields, function(i, field){
      sortBy.push("<option value='" + field + "'>" + field.toProperCase() + "</option>")
    });
    $("#lstSortBy").html(sortBy.join(""));

  })();

</script>
