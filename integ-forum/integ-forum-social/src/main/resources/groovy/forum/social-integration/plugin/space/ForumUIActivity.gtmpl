<%
/*
<!--

    Copyright (C) 2003-2010 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see<http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.webui.form.UIFormTextAreaInput;
  import org.exoplatform.social.core.service.LinkProvider;
  import org.exoplatform.social.core.space.model.Space;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.core.service.LinkProvider;
  import org.exoplatform.forum.ext.impl.ForumSpaceActivityPublisher;

  def pcontext = Util.getPortalRequestContext();
  
  def jsManager = pcontext.getJavascriptManager();
  //jsManager.loadScriptResource("base"); //portal's problem, workaround for uicomponent.event()

  def labelActivityHasBeenDeleted = _ctx.appRes("UIActivity.label.Activity_Has_Been_Deleted");
  def activity = uicomponent.getActivity();
  def activityDeletable = uicomponent.isActivityDeletable();
  def activityCommentAndLikable = uicomponent.isActivityCommentAndLikable();
  def streamOwner = activity.getStreamOwner();
%>

<% if (activity) { //process if not null

  def labelComment = _ctx.appRes("UIActivity.label.Comment");
  def labelLike = _ctx.appRes("UIActivity.label.Like");
  def labelUnlike = _ctx.appRes("UIActivity.label.Unlike");
  def labelSource = _ctx.appRes("UIActivity.label.Source");
  def inputWriteAComment = _ctx.appRes("UIActivity.input.Write_A_Comment");
  def labelShowAllComments = _ctx.appRes("UIActivity.label.Show_All_Comments");
  def labelHideAllComments = _ctx.appRes("UIActivity.label.Hide_All_Comments");
  def labelOnePersonLikeThis = _ctx.appRes("UIActivity.label.One_Person_Like_This");
  def labelPeopleLikeThis = _ctx.appRes("UIActivity.label.People_Like_This");
  def labelYouLikeThis = _ctx.appRes("UIActivity.label.You_Like_This");
  def labelYouAndOnePersonLikeThis = _ctx.appRes("UIActivity.label.You_And_One_Person_Like_This");
  def labelYouAndPeopleLikeThis = _ctx.appRes("UIActivity.label.You_And_People_Like_This");

  def likeActivityAction = uicomponent.event("LikeActivity", "true");
  def unlikeActivityAction = uicomponent.event("LikeActivity", "false");

  def commentList = uicomponent.getComments();
  def allComments = uicomponent.getAllComments();
  if (allComments) {
    labelShowAllComments = labelShowAllComments.replace("{0}", allComments.size() + "");
    labelHideAllComments = labelHideAllComments.replace("{0}", allComments.size() + "");

  }
  def displayedIdentityLikes = uicomponent.getDisplayedIdentityLikes();
  def identityLikesNum = 0;
  def labelLikes = null;
  def toggleDisplayLikesAction = uicomponent.event("ToggleDisplayLikes");
  def startTag = "<a onclick=\"$toggleDisplayLikesAction\" id=\"ToggleDisplayListPeopleLikes${activity.id}\" href=\"#ToggleDisplayListPeopleLikes\">";
  def endTag = "</a>";
  if (displayedIdentityLikes != null) {
    identityLikesNum = displayedIdentityLikes.length;
  }
  def commentListStatus = uicomponent.getCommentListStatus();
  def commentFormDisplayed = uicomponent.isCommentFormDisplayed();
  def likesDisplayed = uicomponent.isLikesDisplayed();
  //params for init UIActivity javascript object
  def params = """ {
      activityId: '${activity.id}',
      inputWriteAComment: '$inputWriteAComment',
      commentMinCharactersAllowed: '${uicomponent.getCommentMinCharactersAllowed()}',
      commentMaxCharactersAllowed: '${uicomponent.getCommentMaxCharactersAllowed()}',
      commentFormDisplayed: '$commentFormDisplayed',
      allCommentSize: '${allComments.size()}',
      commentFormFocused: '${uicomponent.isCommentFormFocused()}'
    } """
  //jsManager.addOnLoadJavascript("initUIActivity${activity.id}");
    jsManager.require("SHARED/social-ui-activity","activity").addScripts("activity.onLoad($params);");
    
  //make sures commentFormFocused is set to false to prevent any refresh to focus, only focus after post a comment
  uicomponent.setCommentFormFocused(false);
  def ownerName, ownerUri = "#", ownerAvatar, activityPostedTime, activityPostedTimeInSpace;
  def listPeopleLikeBlockClass = "", listPeopleBGClass = "";

  if (!likesDisplayed) {
    listPeopleLikeBlockClass = "displayNone";
  }

  if (uicomponent.isLiked()) {
    if (identityLikesNum > 1) {
      labelLikes = labelYouAndPeopleLikeThis.replace("{start}", startTag).replace("{end}", endTag).replace("{0}", identityLikesNum + "");
    } else if (identityLikesNum == 1) {
      labelLikes = labelYouAndOnePersonLikeThis.replace("{start}", startTag).replace("{end}", endTag);
    } else {
      labelLikes = labelYouLikeThis;
    }
  } else {
    if (identityLikesNum > 1) {
        labelLikes = labelPeopleLikeThis.replace("{start}", startTag).replace("{end}", endTag).replace("{0}", identityLikesNum + "");
    } else if (identityLikesNum == 1) {
        labelLikes = labelOnePersonLikeThis.replace("{start}", startTag).replace("{end}", endTag);
    }
  }

  if (!labelLikes) {
   //hides diplayPeopleBG
   listPeopleBGClass = "displayNone";
  }

  activityPostedTime = uicomponent.getPostedTimeString(_ctx, activity.postedTime);

  def ownerIdentity = uicomponent.ownerIdentity;
  if (uicomponent.isUserActivity()) {
    ownerUri = LinkProvider.getUserProfileUri(ownerIdentity.getRemoteId());
    ownerAvatar = ownerIdentity.profile.avatarUrl;
    ownerName = ownerIdentity.profile.fullName;
    if (!ownerAvatar) ownerAvatar= LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
  } else {
    Space space = Utils.getSpaceService().getSpaceByPrettyName(ownerIdentity.remoteId);
    ownerUri = LinkProvider.getSpaceUri(space.url);
    ownerAvatar = space.avatarUrl;
    ownerName = space.displayName;
    if (!ownerAvatar) ownerAvatar = LinkProvider.SPACE_DEFAULT_AVATAR_URL;
  }
%>

<div class="activityStream uiForumActivity">
	  <% uiform.begin() %>
	 <div class="activityTimeLine pull-left">
		<div class="activityAvatar avatarCircle">
			<a class="avatar" rel="tooltip" data-placement="bottom" title="$ownerName" href="$ownerUri">
			  <img  alt="$ownerName" src="$ownerAvatar"/>
			</a>
		</div>
		<div class="activityType"><span><i class="uiIconForum uiIconWhite"></i></span></div>					
	</div><!--end activityTimeLine-->
	<div class="boxContainer" id="boxContainer">
		<div id="ContextBox${activity.id}"class="uiBox contentBox">
			<div id="ActivityContextBox${activity.id}">     
				<div class="heading">
					<span class="arrowLeft"></span>
					<% if (activityDeletable) {%>
						  <a href="javascript:void(0)" onclick="<%= uicomponent.event("DeleteActivity", uicomponent.getId(), ""); %>" class="uiIconClose uiIconLightGrey" id="DeleteActivityButton${activity.id}"></a>
						<%}%>
					<div class="author">
						<a rel="tooltip" data-placement="bottom" title="$ownerName" href="$ownerUri">
						$ownerName
						</a>          
					</div>	
					<div class="dataInfor">
						<span class="dateTime"><i class="uiIconClock uiIconLightGrey"></i>&nbsp;$activityPostedTime</span> 
						<% if (uicomponent.isUserActivity() && uicomponent.isSpaceStreamOwner() && !uicomponent.isUISpaceActivitiesDisplay()) {
								Space spaceSource = Utils.getSpaceService().getSpaceByPrettyName(streamOwner);
									def spaceSourceURI = LinkProvider.getSpaceUri(spaceSource.url);
									def spaceName = spaceSource.displayName;
						%>
						<a class="spaceName" rel="tooltip" data-placement="bottom" title="$spaceName" href="$spaceSourceURI"><i class="uiIconGroup uiIconLightGrey"></i>&nbsp;$spaceName</a>
						<%} %>
					</div>
				</div><!--end heading-->
				<div class="uiBox roundedBottom introBox forumShare">	
					<div class="clearfix headingContainer">
						<div class="pull-right sumaryRate">
							<i class="uiIconStarUp"></i><!--hack code-->	
							<i class="uiIconStarUp"></i><!--hack code-->	
							<i class="uiIconStarDown"></i><!--hack code-->	
							<i class="uiIconStarDown"></i><!--hack code-->	
							<i class="uiIconStarDown"></i><!--hack code-->	
						</div>
						<div class="titleForum">
							<a class="linkTitle" href="" title="">Whatï¿½s new in GateIn 3.5 ? </a><!--hackcode-->
						</div>
					</div>	
				  <div class="contentForum theContent">
					<p class="text">$activity.body</p>
					<span>2 Replies</span><!--hack code-->	
				  </div>
				</div><!--end introBox,linkShare-->					
				<div class="actionBar clearfix forumActivityIcon">
				  <% def toggleDisplayCommentAction = uicomponent.event('ToggleDisplayCommentForm', null, false);
					 def commentLink = "";
				  %>
				 <% if (activityCommentAndLikable) { %>						 
					<ul class="pull-right statusAction">						
						<li>
							<a class="$commentLink" onclick="$toggleDisplayCommentAction" id="CommentLink${activity.id}" href="#comment">
								<i class="uiIconComment uiIconLightGrey"></i>&nbsp;2<!-- hackcode add dynamic later-->
							</a>
						</li>
					  <% if (uicomponent.isLiked()) { %>
						<li>
							<a onclick="$unlikeActivityAction" id="UnLikeLink${activity.id}" href="#unlike">
							   <i class="uiIconThumbUp uiIconLightGrey"></i>&nbsp;3<!-- hackcode add dynamic later-->
							</a> 
						</li>
					  <% } else { %>
						<li>
							<a onclick="$likeActivityAction" id="LikeLink${activity.id}" href="#like">
							  <i class="uiIconThumbDown uiIconLightGrey"></i>&nbsp;3<!-- hackcode add dynamic later-->
							</a>
						</li>
					  <% }%>											 
					</ul>  
				 <% }%>	
				<ul class="pull-left statusAction">					 
					<li>
						<a href="${uicomponent.getReplyLink()}" id="ReplyLink${activity.id}">
						   <i class="uiIconReply uiIconLightGrey"></i>&nbsp;<%= _ctx.appRes("ForumUIActivity.label.reply")%>
						 </a>
					</li> 
					<li>
						<a href="${uicomponent.getViewLink()}" id="View${activity.id}">
						   <i class="uiIconLastestReply uiIconLightGrey"></i>&nbsp;<%= _ctx.appRes("ForumUIActivity.label.view") %>
						 </a>
					</li>							
				 </ul>
				</div><!--end actionBar-->					  
				<% if (identityLikesNum > 0 || uicomponent.isLiked()) {%>				
					<div class="listLikedBox $listPeopleBGClass">		
						<div class="listPeopleContent">
				  <% if (!labelLikes) labelLikes = ""; %>
							<p>Liked by you, Thomas and Marry</p><!--hackcode-->
						<% if (identityLikesNum > 0) {%>
						<div class="listLiked">
						<%
						displayedIdentityLikes.each({
						  def id = Utils.getIdentityManager().getIdentity(it);
						  personLikeFullName = id.profile.fullName;
						  personLikeProfileUri = LinkProvider.getUserProfileUri(id.getRemoteId());
						  personLikeAvatarImageSource = id.profile.avatarUrl;
						  if (!personLikeAvatarImageSource) personLikeAvatarImageSource = LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
						  %>
							<a class="avatarSmall" rel="tooltip" data-placement="bottom" title="$personLikeFullName" href="$personLikeProfileUri">
							  <img src="$personLikeAvatarImageSource" alt="$personLikeFullName" />
							</a>
						 <% })%>
						</div>
						<% }%>
					  </div>
				</div><!--end list like people--> 
				<%}%>    
				<div id="CommentBlockBound${activity.id}" class="commentBox">					
					  <% if (uicomponent.commentListToggleable()) {
					  def showAllCommentsAction = uicomponent.event("SetCommentListStatus", "all");
					  def hideAllCommentsAction = uicomponent.event("SetCommentListStatus", "none");
					  %> 
					<div class="commentListInfo clearfix">
						<div class="pull-right numberComment">0/31 </div><!--hackcode-->
						<% if (commentListStatus.getStatus().equals("latest") || commentListStatus.getStatus().equals("none")) { %>
						  <a onclick="$showAllCommentsAction" href="#show-all-comments">
						   view previous comments
						  </a>
						<% } %>
					 </div>
					 <% } %>
					<div class="commentList">	
					<%
					def commenterFullName, commenterProfileUri, commentMessage, commentPostedTime, commenterAvatarImgSrc;
					def first = true, commentContentClass;
					def commentCounter = 0;
					commentList.each({
					  commentCounter++;
					  if (first & !uicomponent.commentListToggleable()) {
						commentContentClass = "commentContent";
						first = false;
					  } else {
						commentContentClass = "";
					  }

					  def id = Utils.getIdentityManager().getIdentity(it.userId);
					  commenterFullName = id.profile.fullName;
					  commenterProfileUri = LinkProvider.getUserProfileUri(id.getRemoteId());
					  commentMessage = it.title;
					  commentPostedTime = uicomponent.getPostedTimeString(_ctx, it.postedTime);
					  commenterAvatarImgSrc = id.profile.avatarUrl;
					  if (!commenterAvatarImgSrc) commenterAvatarImgSrc = LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
					%>
					  <% if (commentCounter == commentList.size()) {%>
					  <div id="CommentBlock${activity.id}${commentCounter}" class="commentItem commentItemLast">
					  <% } else { %>
					  <div id="CommentBlock${activity.id}${commentCounter}" class="commentItem">
					  <% } %>
						<div class="commmentLeft">
						  <a class="avatarSmall" href="$commenterProfileUri" rel="tooltip" data-placement="bottom" title="$commenterFullName" >
							<img alt="$commenterFullName" src="$commenterAvatarImgSrc" />
						  </a>
						</div><!--end commentLeft-->     
						<div class="commentRight">
							<div class="author">
								<a href="$commenterProfileUri">$commenterFullName</a>
								<span class="dateTime">
									 $commentPostedTime
								 </span>
							</div>
							<p class="contentComment">
								$commentMessage
							</p>          
						</div><!--end commentRight-->
					  <%
						if (uicomponent.isCommentDeletable(it.userId)) {
					  %>
						<a class="uiIconClose uiIconLightGrey" href="javascript:void(0)" id="DeleteCommentButton${activity.id}${commentCounter}"  onclick="<%= uicomponent.event("DeleteComment", uicomponent.id, it.id); %>"></a>
					  <% } %>
					  
					  <a class="viewComment" id="" href=""  ><i class="uiIconWatch uiIconLightGrey"></i>&nbsp;View</a><!--hackcode-->
					  
					  </div><!--end commentItem-->
					<% }) %>				
					</div> <!--end commentlist-->
				    <div class="commentList inputContainer" id="InputContainer${activity.id}">
					<%
					  def currentCommenterIdentity = Utils.getOwnerIdentity();
					  def currentCommenterUri = LinkProvider.getUserProfileUri(currentCommenterIdentity.getRemoteId());
					  def currentCommenterAvatar = currentCommenterIdentity.profile.avatarUrl;
					  def currentCommenterName = currentCommenterIdentity.profile.fullName;
					  if (!currentCommenterAvatar) currentCommenterAvatar= LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
					%>
					<% if (commentList.size() == 0) { %>
					  <div class="commentItem noCommentFormBox" id="CommentFormBlock${activity.id}">
					<% } else { %>
					  <div class="commentItem commentFormBox" id="CommentFormBlock${activity.id}">
					<% } %>
					  <div class="commmentLeft">
							<a class="avatarSmall" rel="tooltip" data-placement="bottom" title="$currentCommenterName" href="$currentCommenterUri">
								<img src="$currentCommenterAvatar" alt="$currentCommenterName"/>
							</a>
						</div><!--end commentLeft--> 
						<div class="commentRight">
							<div class="commentInputBox ">
								 <button class="btn pull-right btn-primary" onclick="<%= uicomponent.event("PostComment") %>"  rel="tooltip" data-placement="bottom" title="$labelComment" id="CommentButton${activity.id}">$labelComment</button>
								<div class="commentInput"><% uicomponent.renderChild(UIFormTextAreaInput.class); %></div>
							</div>
						</div><!--end commentRight-->      
					  </div> <!--end commentItem-->		
					</div><!--end commentlist-->	  
				</div><!--end commentBox-->
			</div><!--end #ActivityContextBox${activity.id}-->
		</div> <!--end ContextBox${activity.id}-->	
  </div> <!-- #boxContainer-->	  
  <% uiform.end() %>
</div>
<% } else { %> <!-- activity deleted -->
<div class="activityStream deleted">$labelActivityHasBeenDeleted</div>
<% }%>
